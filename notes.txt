our aim is to build a weather map
user searches a location 
our code will fetch the weather information from open weather and display it
design specs
1. input text box where user can enter the city name
2. validate the city name such that it should be minimum three characters and max 20 characters, contains only alphabets
3. to maintain uniformity, all input text should be lower case
4. a table that is visible only if user enters a valid city name ( that is: open weather map gives result)
5. recent list of search cities on the right hand side


var regex = /^[a-zA-Z]{3,20}$/; 


function validCityName() {
    var name = $("#cityName").val();
    if (!name) {
        $(".error").text("City Name Cannot Be Empty");
        return false;
    }
    var regex = /^[a-zA-Z]*$/;
    if (!regex.test(name)) {
        $(".error").text("only alphabets allowed");
        return false;
    }
    $(".error").text("");
    return true;
}

api.openweathermap.org/data/2.5/forecast?q={city name}&appid={your api key}

api key = 3c7fb38c0ebc7b5f0e45f32f19331a88
api.openweathermap.org/data/2.5/forecast?q={city name}&appid=3c7fb38c0ebc7b5f0e45f32f19331a88
api.openweathermap.org/data/2.5/forecast?q=kitchener&appid=3c7fb38c0ebc7b5f0e45f32f19331a88
making an ajax call results in either
1. success - 200 - the server responded with the required data
2. error - 404 - u r hitting the wrong url
- 500+ - 2 possibilities - 1. you are requesting the data in wrong format or 
2. your backend code is not working.
all these information can be visualized in inspect element / network tab


1. get the weather information. -read -method=Get
2. store the cityName and time stamp. -create -method=post
3. update the cityName and time stamp. -update -method=put
4. delete the city name and time stamp. -delete -method=delete

get url/cities-fetches all the cities
get url/cities/cityId - fetch a specific city based on the cityId
post url/cities, payload-cityInfo creates a new city and saves cityInfo
put url/cities, payload-cityInfo updates all cities with cityInfo
put url/cities/cityId, payload-cityInfo updates specific city based on cityId with cityInfo
delete url/cities, deletes all cities
delete url/cities/CityId, deletes specific city based on cityId

